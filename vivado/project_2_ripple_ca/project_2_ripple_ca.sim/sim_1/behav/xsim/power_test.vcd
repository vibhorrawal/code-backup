$date
   Wed Feb 20 07:19:00 2019
$end
$version
  2018.2
$end
$timescale
  1ps
$end
$scope module test $end
$var reg 4 ! r_ADD_1 [3:0] $end
$var reg 4 " r_ADD_2 [3:0] $end
$var wire 5 # w_RESULT [4:0] $end
$scope module adder_inst $end
$var wire 5 # out [4:0] $end
$var wire 4 $ a [3:0] $end
$var wire 4 % b [3:0] $end
$var reg 1 & cin $end
$var wire 1 ' w0 $end
$var wire 1 ( w1 $end
$var wire 1 ) w2 $end
$scope module adder0 $end
$var wire 1 * s $end
$var wire 1 ' c $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 - c_in $end
$var wire 1 . w1 $end
$var wire 1 / w2 $end
$var wire 1 0 w3 $end
$upscope $end
$scope module adder1 $end
$var wire 1 1 s $end
$var wire 1 ( c $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 ' c_in $end
$var wire 1 4 w1 $end
$var wire 1 5 w2 $end
$var wire 1 6 w3 $end
$upscope $end
$scope module adder2 $end
$var wire 1 7 s $end
$var wire 1 ) c $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 ( c_in $end
$var wire 1 : w1 $end
$var wire 1 ; w2 $end
$var wire 1 < w3 $end
$upscope $end
$scope module adder3 $end
$var wire 1 = s $end
$var wire 1 > c $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 ) c_in $end
$var wire 1 A w1 $end
$var wire 1 B w2 $end
$var wire 1 C w3 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1000 !
b1000 "
b10000 #
b1000 $
b1000 %
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
1>
1?
1@
0A
1B
0C
$end
